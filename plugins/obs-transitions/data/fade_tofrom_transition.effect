uniform float4x4 ViewProj;
uniform texture2d tex_a;
uniform texture2d tex_b;
uniform float progress;
uniform float4 color;
uniform float switch_point;

sampler_state textureSampler {
	Filter    = Linear;
	AddressU  = Clamp;
	AddressV  = Clamp;
};

struct VertData {
	float4 pos : POSITION;
	float2 uv  : TEXCOORD0;
};

VertData VSDefault(VertData v_in)
{
	VertData vert_out;
	vert_out.pos = mul(float4(v_in.pos.xyz, 1.0), ViewProj);
	vert_out.uv  = v_in.uv;
	return vert_out;
}

float4 PSFadeToFrom(VertData v_in) : TARGET
{
	float4 a_val = tex_a.Sample(textureSampler, v_in.uv);
	float4 b_val = tex_b.Sample(textureSampler, v_in.uv);
	return lerp(
		lerp(a_val, color, smoothstep(0.0f, switch_point, progress)),
		lerp(color, b_val, smoothstep(switch_point, 1.0f, progress)),
		progress);
}

technique FadeToFrom
{
	pass
	{
		vertex_shader = VSDefault(v_in);
		pixel_shader = PSFadeToFrom(v_in);
	}
}
